
@{
    ViewBag.Title = "VehicleServiceDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model CompuData.Models.VehicleService
    HttpContext.Current.Response.Cache.SetAllowResponseInBrowserHistory(false);
    HttpContext.Current.Response.Cache.SetCacheability(HttpCacheability.NoCache);
}

<nav id="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="../MainMenu">Home</a></li>
        <li class="breadcrumb-item"><a href="../VehicleMenu">Vehicle Menu</a></li>
        <li class="breadcrumb-item"><a href="../VehicleServices">Vehicle Services</a></li>
        <li class="breadcrumb-item active" aria-current="page">Vehicle Service Details</li>
    </ol>
</nav>
@Html.Partial("_ProfilePartial")
<div id="details_holder">
    <p>Vehicle Service Details</p>
    @Html.HiddenFor(model => model.IntervalID)
    <div>
        <p>Service Date:</p>
        @Html.EditorFor(model => model.ServiceDate, new { htmlAttributes = new { @readonly = "readonly", @disabled = true } })
    </div>
    <div>
        <p>Completed:</p>
        @Html.TextBoxFor(model => model.Completed, new { @readonly = "readonly" })
    </div>
    <div id="multipleButtons">
        <div id="modifyButton">Modify</div>
        <div id="removeButton">Remove</div>
    </div>
</div>
<div id="backButton" onclick="window.location.href = '@Url.Action("Index", "VehicleServices")'">Back</div>
<style>
    #details_holder {
        position: absolute;
        display: flex;
        flex-direction: column;
        padding: 15px;
        padding-top: 20px;
        padding-bottom: 20px;
        background-color: rgba(128, 128, 128, 0.95);
        height: auto;
        min-width: 600px;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
    }

        #details_holder p {
            font-size: 25px;
            text-align: center;
            flex: 1;
        }

        #details_holder div {
            display: flex;
            flex-direction: row;
            line-height: 30px;
        }

            #details_holder div p {
                font-size: 20px;
                flex: 50%;
                text-align: left;
                vertical-align: middle;
                padding: 0;
                margin: 0;
            }

            #details_holder div input {
                flex: 50%;
            }

            #details_holder div button {
                background-color: white;
                flex: 50%;
            }

    .gj-datepicker {
        flex: 50%;
    }

    #completedInput {
        flex: 50%;
    }

    #multipleButtons {
        display: flex;
        flex-direction: row;
    }

    #modifyButton {
        position: relative;
        z-index: 8000;
        text-decoration: none;
        color: white;
        cursor: pointer;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        margin-left: auto;
        margin-right: auto;
        box-sizing: border-box;
        border: solid white;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
        margin-top: 10px;
        padding: 10px;
        transition: background-color linear 0.5s;
    }

        #modifyButton:hover {
            background-color: rgba(0, 255, 255, 0.4);
        }

    #removeButton {
        position: relative;
        z-index: 8000;
        text-decoration: none;
        color: white;
        cursor: pointer;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        margin-left: auto;
        margin-right: auto;
        box-sizing: border-box;
        border: solid white;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
        margin-top: 10px;
        padding: 10px;
        transition: background-color linear 0.5s;
    }

        #removeButton:hover {
            background-color: rgba(0, 255, 255, 0.4);
        }

    #backButton {
        position: fixed;
        left: 0;
        bottom: 0;
        z-index: 10000;
        text-decoration: none;
        color: white;
        cursor: pointer;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        margin-left: 2vh;
        box-sizing: border-box;
        border: solid white;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
        padding: 10px;
        transition: background-color linear 0.5s;
    }

        #backButton:hover {
            background-color: rgba(0, 255, 255, 0.4);
        }

    #breadcrumb {
        position: absolute;
        top: 0px;
        width: 100%;
    }

    .breadcrumb-item {
        font-size: 25px;
    }

    .breadcrumb {
        top: 0;
        background-color: #33363b !important;
        padding-left: 60px !important;
    }

    #profile {
        position: relative;
        z-index: 7979;
        margin-left: auto;
        margin-bottom: auto;
        height: 61px;
        width: 20%;
        background-color: #33363b;
        transform: translateX(-3px);
    }

        #profile a {
            display: table;
            font-family: 'Raleway', sans-serif;
            font-weight: 200;
            font-size: 25px;
            text-decoration: none !important;
            color: #5a9ad6;
            line-height: 61px;
            vertical-align: middle;
            margin-left: auto;
            margin-right: auto;
        }

    .glyphicon {
        margin-left: 6px;
    }

    .dropdown-menu {
        background-color: #33363b;
    }

        .dropdown-menu li a {
            color: #5a9ad6;
        }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $('#modifyButton').on('click', function () {
            var intervalID = @Model.IntervalID;
            @{Session["Referrer"] = System.IO.Path.GetFileName(Request.Url.AbsolutePath);
                Session["Query"] = Request.Url.Query;}

            $.ajax({
                url: '@Url.Action("RedirectToModifyVehicleServiceDetails", "ModifyVehicleServiceDetails")',
                type: 'POST',
                data: { intervalID: intervalID },
                dataType: 'json',
                success: function (data) {
                    window.location.href = data.Url;
                }
            });
        });

        $('#removeButton').on('click', function() {
            var intervalID = @Model.IntervalID;

            swal({
                title: "Are you sure you want to delete this Interval?",
                icon: "warning",
                dangerMode: true,
                buttons: [
                    true,
                    "Yes",
                ],
                closeOnClickOutside: false,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            url: '@Url.Action("Delete", "VehicleServices")',
                            type: 'POST',
                            data: { intervalID: intervalID },
                            dataType: 'json',
                            success: function (data) {
                                if (data.Url != "Cascading error!") {
                                    swal("You have successfully deleted the Vehicle Service", {
                                        icon: "success",
                                    }).then(() => {
                                        window.location.href = data.Url;
                                    });
                                }
                                else {
                                    swal("Cannot delete this due to it being used somewhere else in the system!", {
                                        icon: "warning",
                                    });
                                }
                            }
                        });
                    }
                });

        })
    });
</script>