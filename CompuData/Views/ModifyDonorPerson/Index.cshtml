@{
    ViewBag.Title = "Index";
    @model CompuData.Models.Donor_Person
    HttpContext.Current.Response.Cache.SetAllowResponseInBrowserHistory(false);
    HttpContext.Current.Response.Cache.SetCacheability(HttpCacheability.NoCache);
}

<nav id="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="../MainMenu/Index">Home</a></li>
        <li class="breadcrumb-item"><a href="../DonorsMenu/Index">Donors Menu</a></li>
        <li class="breadcrumb-item"><a href="../DonorPerson/Index">Donor - Person</a></li>
        @if (Session["Referrer"] as string == "DonorPersonDetails")
        {
            <li class="breadcrumb-item"><a href="../DonorPersonDetails">Donor Person Details</a></li>
        }
        <li class="breadcrumb-item active" aria-current="page">Modify Donor - Person</li>
    </ol>
</nav>

<head>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script type="text/javascript" src="~/Scripts/jquery-3.1.1.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
</head>

@Html.Partial("_ProfilePartial")

<div class="col-md-6" id="mytwoColumns">
    <p id="myheading2">Modify Donor - Person</p>
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#PCRDetails" id="tabitem">Donor Details</a></li>
        <li><a data-toggle="tab" href="#LineItems" id="tabitem">Address Details</a></li>
    </ul>
    @using (@Html.BeginForm("Modify", "ModifyDonorPerson", FormMethod.Post, new { id = "myForm" }))
    {
        @Html.HiddenFor(model => model.DonorPID)
        <div class="tab-content">
            <div id="PCRDetails" class="tab-pane fade in active">
                <div class="row-md-6">
                    <div class="card mb-4 box-shadow">
                        <div class="card-body">
                            <div>
                                <p>First Name:</p>
                                @Html.EditorFor(model => model.FirstName)
                            </div>
                            @Html.ValidationMessageFor(model => model.FirstName)
                            <div>
                                <p>Middle Name:</p>
                                @Html.EditorFor(model => model.MiddleName)
                            </div>
                            @Html.ValidationMessageFor(model => model.MiddleName)
                            <div>
                                <p>Last Name:</p>
                                @Html.EditorFor(model => model.SecondName)
                            </div>
                            @Html.ValidationMessageFor(model => model.SecondName)
                            <div>
                                <p>Initials:</p>
                                @Html.EditorFor(model => model.Initials)
                            </div>
                            @Html.ValidationMessageFor(model => model.Initials)
                            <div>
                                <p>Cell Number:</p>
                                @Html.EditorFor(model => model.CellNum)
                            </div>
                            @Html.ValidationMessageFor(model => model.CellNum)
                            <div>
                                <p>Personal Email:</p>
                                @Html.EditorFor(model => model.PersonalEmail)
                            </div>
                            @Html.ValidationMessageFor(model => model.PersonalEmail)
                        </div>
                    </div>
                </div>
            </div>
            <div id="LineItems" class="tab-pane fade">
                <div class="row-md-6">
                    <div class="card mb-4 box-shadow">
                        <div class="card-body" id="cardbody2">
                            <div>
                                <p>Street Address:</p>
                                @Html.EditorFor(model => model.StreetAddress)
                            </div>
                            @Html.ValidationMessageFor(model => model.StreetAddress)
                            <div>
                                <p>City:</p>
                                @Html.EditorFor(model => model.City)
                            </div>
                            @Html.ValidationMessageFor(model => model.City)
                            <div>
                                <p>Area Code:</p>
                                @Html.EditorFor(model => model.AreaCode)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="multipleButtons">
                <div id="addButton">Save and Add Funder - Person</div>
            </div>
        </div>
    }
</div>


<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<div id="backButton" onclick="window.location = '@Request.UrlReferrer.ToString()'">Back</div>

<style>
    /* Customize the label (the container) */
    .container {
        display: block;
        width: 25px;
        position: relative;
        margin-left: auto;
        margin-top: 3px;
        cursor: pointer;
        font-size: 22px;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .container input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .container input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .container input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .container .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    .tab-content {
        overflow-y: auto;
    }

    #Dropdown1 {
        width: auto;
        border-left: 50px;
    }

    #tabitem {
        color: black;
    }

    #myheading1 {
        font-size: 30px;
    }

    #myheading2 {
        transform: translateX(0px) !important;
        font-size: 25px;
        text-align: center;
    }

    #table_background p {
        font-size: 25px;
        text-align: center;
    }

    #table_background {
        height: auto;
        min-width: 600px;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
    }

    #table_id {
        background-color: #5a9ad6;
    }

    #Flexyman {
        display: flex;
        flex-direction: row;
        line-height: 30px;
    }

    #mytwoColumns {
        position: absolute;
        height: auto;
        width: auto;
        padding: 15px;
        padding-top: 20px;
        padding-bottom: 20px;
        background-color: rgba(128, 128, 128, 0.95);
        min-width: 600px;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
    }

    .card-body p {
        font-size: 25px;
        text-align: left;
        flex: 1;
        text-align: center;
        flex-basis: 100%;
    }

    #cardbody2 {
        overflow: auto;
        max-height: 350px;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        float: left;
        position: relative;
        background-color: rgba(128, 128, 128, 0.95);
        height: auto;
    }

        .card-body div {
            display: flex;
            flex-direction: row;
            margin-top: 1px;
            margin-bottom: 1px;
        }

        .card-body p {
            text-align: left;
            vertical-align: middle;
            padding: 0;
            margin: 0;
            flex: 50%;
        }

        .card-body div input {
            flex: 50%;
        }

        .card-body div select {
            flex: 50%;
        }

    form {
        top: 0;
        left: 0;
    }

    .field-validation-error {
        display: block;
        word-wrap: break-word;
        margin-left: 50%;
    }

    #details_holder {
        position: absolute;
        display: flex;
        flex-direction: column;
        padding: 15px;
        padding-top: 20px;
        padding-bottom: 20px;
        background-color: rgba(128, 128, 128, 0.95);
        height: auto;
        min-width: 600px;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
    }

        #details_holder p {
            font-size: 25px;
            text-align: center;
            flex: 1;
        }

        #details_holder div {
            display: flex;
            flex-direction: row;
            line-height: 30px;
        }

            #details_holder div p {
                font-size: 20px;
                flex: 50%;
                text-align: left;
                vertical-align: middle;
                padding: 0;
                margin: 0;
            }

            #details_holder div input {
                flex: 50%;
            }

            #details_holder div select {
                flex: 50%;
            }

            #details_holder div button {
                background-color: white;
                flex: 50%;
            }

    .gj-datepicker {
        flex: 50%;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        opacity: 1;
    }

    #typeDropDown {
        position: absolute;
        top: 100%;
        left: 0;
        display: none;
    }

    #addButton {
        position: relative;
        display: inline-block !important;
        text-decoration: none;
        color: white;
        cursor: pointer;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        box-sizing: border-box;
        border: solid white;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
        margin-top: 10px;
        margin-left: auto;
        margin-right: auto;
        padding: 10px;
        transition: background-color linear 0.5s;
    }

        #addButton:hover {
            background-color: rgba(0, 255, 255, 0.4);
        }

    #backButton {
        position: fixed;
        left: 0;
        bottom: 0;
        z-index: 10000;
        text-decoration: none;
        color: white;
        cursor: pointer;
        letter-spacing: 0.15em;
        text-transform: uppercase;
        margin-left: 2vh;
        box-sizing: border-box;
        border: solid white;
        border-width: 2px;
        border-radius: 50px 50px 50px 50px;
        padding: 10px;
        transition: background-color linear 0.5s;
    }

        #backButton:hover {
            background-color: rgba(0, 255, 255, 0.4);
        }

    #breadcrumb {
        position: absolute;
        top: 0px;
        width: 100%;
    }

    .breadcrumb-item {
        font-size: 25px;
    }

    .breadcrumb {
        top: 0;
        background-color: #33363b !important;
        padding-left: 60px !important;
    }

    #profile {
        position: relative;
        z-index: 7979;
        margin-left: auto;
        margin-bottom: auto;
        height: 61px;
        width: 20%;
        background-color: #33363b;
        transform: translateX(-3px);
    }

        #profile a {
            display: table;
            font-family: 'Raleway', sans-serif;
            font-weight: 200;
            font-size: 25px;
            text-decoration: none !important;
            color: #5a9ad6;
            line-height: 61px;
            vertical-align: middle;
            margin-left: auto;
            margin-right: auto;
        }

    .glyphicon {
        margin-left: 6px;
    }

    .dropdown-menu {
        background-color: #33363b;
    }

        .dropdown-menu li a {
            color: #5a9ad6;
        }
</style>




<script type="text/javascript">
    $(document).ready(function () {
        $('tabitem1').on('click', function () {
            var x = document.getElementById("tabitem1").getAttribute("aria-expanded");

            if (x == "true") {
                x = "false"
            } else {
                x = "true"
            }
            document.getElementById("tabitem1").setAttribute("aria-expanded", x);
            document.getElementById("tabitem1").innerHTML = "aria-expanded = " + x;
        })

        $('.nav-tabs>li>a').on('click', function (e) {
            $(this).siblings().removeClass('active');
        })
    })

    $("#addButton").click(function (event) {
        swal({
            title: "Are you sure?",
            icon: "info",
            buttons: [
                true,
                "Yes",
            ],
            closeOnClickOutside: false,
        })
        .then((willDelete) => {
            if (willDelete) {
                $('#myForm').submit();
            }
        });
    });

    $("#addButton").css({ 'flex-basis': '' });
</script>